// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack


/**

Code 	OS API Source 	        Meaning
1 	    Sys.wait 	            Duration must be positive
2 	    Array.new 	            Array size must be positive
3 	    Math.divide 	        Division by zero
4 	    Math.sqrt 	            Cannot compute square root of a negative number
5 	    Memory.alloc 	        Allocated memory size must be positive
6 	    Memory.alloc 	        Heap overflow
7 	    Screen.drawPixel 	    Illegal pixel coordinates
8 	    Screen.drawLine 	    Illegal line coordinates
9 	    Screen.drawRectangle    Illegal rectangle coordinates
12 	    Screen.drawCircle 	    Illegal center coordinates
13 	    Screen.drawCircle 	    Illegal radius
14 	    String.new 	            Maximum length must be non-negative
15 	    String.charAt           String index out of bounds
16 	    String.setCharAt        String index out of bounds
17 	    String.appendChar       String is full
18 	    String.eraseLastChar    String is empty
19 	    String.setInt           Insufficient string capacity
20 	    Output.moveCursor       Illegal cursor location

*/

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() { 
        do Math.init();
        do Memory.init();
        do Output.init();
        do Screen.init();
        do Keyboard.init();      
        return;        
    }

    /** Halts the program execution. */
    function void halt() { while (true) {} return; }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) { 
        var int i, t;
        let t = 0;
        while (t < duration) {
            let i = 0;
            while (i < 35) {
                let i = i + 1;
            }
            let t = t + 1;
        }
        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) { 
      var String er, s;
      let s = String.new();
      let s = s.setInt(errorCode);
      let er = "ERR";
      let er = er.appendChar(s.charAt(0));
      if (s.length() = 2) { let er = er.appendChar(s.charAt(1)); }
      do Output.printString(er);
      return;
    }
}
